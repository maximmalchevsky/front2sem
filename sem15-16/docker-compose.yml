services:
  db:
    image: postgres:17-alpine
    container_name: postgres

    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - app_network
  redis:
    container_name: redis
    image: redis:6.2-alpine
    volumes:
      - './redis_data:/data'
    networks:
      - app_network
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: ./server
    networks:
      - app_network
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=12345678
      - DB_NAME=db
      - JWT_SECRET=my_super_secret_key
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './client:/usr/share/nginx/html'
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge